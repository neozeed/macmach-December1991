/* 
 * Mach Operating System
 * Copyright (c) 1991,1990,1989,1988 Carnegie Mellon University
 * All Rights Reserved.
 * 
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 * 
 *  Software Distribution Coordinator  or  Software.Distribution@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 * 
 * any improvements or extensions that they make and grant Carnegie Mellon
 * the rights to redistribute these changes.
 */
/*
 * HISTORY
 * $Log:	std_types.defs,v $
 * Revision 2.5  91/08/28  11:15:41  jsb
 * 	Added mach_port_seqno_t.
 * 	[91/08/09            rpd]
 * 
 * Revision 2.4  91/05/14  16:58:53  mrt
 * 	Correcting copyright
 * 
 * Revision 2.3  91/02/05  17:35:36  mrt
 * 	Changed to new Mach copyright
 * 	[91/02/01  17:20:49  mrt]
 * 
 * Revision 2.2  90/06/02  14:59:53  rpd
 * 	Converted to new IPC.
 * 	[90/03/26  22:38:56  rpd]
 * 
 * Revision 2.1  89/08/03  17:18:38  rwd
 * Created.
 * 
 * Revision 2.3  89/02/25  18:40:18  gm0w
 * 	Changes for cleanup.
 * 
 * Revision 2.2  89/01/15  16:31:41  rpd
 * 	Moved from kern/ to mach/.
 * 	[89/01/15  14:33:24  rpd]
 * 
 * Revision 2.2  89/01/12  07:58:48  rpd
 * 	Created.
 * 	[89/01/12  04:15:04  rpd]
 * 
 */
/*
 *	Mach kernel standard interface type declarations
 */

#ifndef	_MACH_STD_TYPES_DEFS_
#define _MACH_STD_TYPES_DEFS_

#ifdef	KERNEL
#include <mach_ipc_compat.h>
#endif	KERNEL

type char = MACH_MSG_TYPE_CHAR;
type short = MACH_MSG_TYPE_INTEGER_16;
type int = MACH_MSG_TYPE_INTEGER_32;
type boolean_t = MACH_MSG_TYPE_BOOLEAN;
type unsigned = MACH_MSG_TYPE_INTEGER_32;

type kern_return_t = int;

type pointer_t = ^array[] of MACH_MSG_TYPE_BYTE;


type mach_port_t = MACH_MSG_TYPE_COPY_SEND;
type mach_port_array_t = ^array[] of mach_port_t;

type mach_port_name_t = MACH_MSG_TYPE_PORT_NAME
	ctype: mach_port_t;
type mach_port_name_array_t = ^array[] of mach_port_name_t
	ctype: mach_port_array_t;

type mach_port_right_t = unsigned;

type mach_port_type_t = unsigned;
type mach_port_type_array_t = ^array[] of mach_port_type_t;

type mach_port_urefs_t = unsigned;
type mach_port_delta_t = int;
type mach_port_seqno_t = unsigned;
type mach_port_mscount_t = unsigned;
type mach_port_msgcount_t = unsigned;
type mach_port_rights_t = unsigned;
type mach_msg_id_t = int;
type mach_msg_type_name_t = unsigned;

type mach_port_move_receive_t =		MACH_MSG_TYPE_MOVE_RECEIVE
	ctype: mach_port_t;
type mach_port_copy_send_t =		MACH_MSG_TYPE_COPY_SEND
	ctype: mach_port_t;
type mach_port_make_send_t =		MACH_MSG_TYPE_MAKE_SEND
	ctype: mach_port_t;
type mach_port_move_send_t =		MACH_MSG_TYPE_MOVE_SEND
	ctype: mach_port_t;
type mach_port_make_send_once_t =	MACH_MSG_TYPE_MAKE_SEND_ONCE
	ctype: mach_port_t;
type mach_port_move_send_once_t =	MACH_MSG_TYPE_MOVE_SEND_ONCE
	ctype: mach_port_t;

type mach_port_receive_t =		MACH_MSG_TYPE_PORT_RECEIVE
	ctype: mach_port_t;
type mach_port_send_t =			MACH_MSG_TYPE_PORT_SEND
	ctype: mach_port_t;
type mach_port_send_once_t =		MACH_MSG_TYPE_PORT_SEND_ONCE
	ctype: mach_port_t;

type mach_port_poly_t = polymorphic
	ctype: mach_port_t;


/* Definitions for the old IPC interface. */

#if	!defined(MACH_IPC_COMPAT) || MACH_IPC_COMPAT

#define MSG_TYPE_PORT_NAME	MACH_MSG_TYPE_INTEGER_32

type port_name_t = MSG_TYPE_PORT_NAME
	ctype: mach_port_t;
type port_name_array_t = ^array[] of port_name_t
	ctype: mach_port_array_t;
type port_type_t = int
	ctype: mach_port_type_t;
type port_type_array_t = ^array[] of port_type_t
	ctype: mach_port_type_array_t;
type port_set_name_t = port_name_t
	ctype: mach_port_t;

type port_t = MACH_MSG_TYPE_COPY_SEND
	ctype: mach_port_t;
type port_all_t = MACH_MSG_TYPE_MOVE_RECEIVE
	ctype: mach_port_t;
type port_rcv_t = MACH_MSG_TYPE_MOVE_RECEIVE
	ctype: mach_port_t;
type port_array_t = ^array[] of port_t
	ctype: mach_port_array_t;

#endif	!defined(MACH_IPC_COMPAT) || MACH_IPC_COMPAT

import <mach/std_types.h>;

#endif	_MACH_STD_TYPES_DEFS_
